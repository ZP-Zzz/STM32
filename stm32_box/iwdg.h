#ifndef __iwdg_H__
#define __iwdg_H__
#include "stm32f10x.h"

void IWDG_Init(u8 Prer,u16 RLR);  //Prer为欲分频系数  RLR为重装载值
void IWDG_Feed(void);
#endif

/*独立看门狗用通俗一点的话来解释就是一个 12 位的递减计数器，当计数器的值从某个值一直
减到 0 的时候，系统就会产生一个复位信号，即 IWDG_RESET。如果在计数没减到 0 之前，
刷新了计数器的值的话，那么就不会产生复位信号，这个动作就是我们经常说的喂狗。。*/


	//while部分是我们在项目中具体需要写的代码，这部分的程序可以用独立看门狗来监控
    //如果我们知道这部分代码的执行时间，比如是500ms，那么我们可以设置独立看门狗的
	//溢出时间是600ms，比500ms多一点，如果要被监控的程序没有跑飞正常执行的话，那么
	//执行完毕之后就会执行喂狗的程序，如果程序跑飞了那程序就会超时，到达不了喂狗
	//的程序,此时就会产生系统复位。但是也不排除程序跑飞了又跑回来了，刚好喂狗了，
	//歪打正着。所以要想更精确的监控程序，可以使用窗口看门狗，窗口看门狗规定必须在
	//规定的窗口时间内喂狗。
